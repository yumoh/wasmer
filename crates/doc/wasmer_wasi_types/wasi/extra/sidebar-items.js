window.SIDEBAR_ITEMS = {"enum":[["Addressfamily",""],["Advice","File or memory access pattern advisory information."],["Bool",""],["BusDataFormat",""],["BusErrno",""],["BusEventType",""],["Clockid","Identifiers for clocks."],["Errno","Error codes returned by functions. Not all of these error codes are returned by the functions provided by this API; some are used in higher-level library layers, and others are provided merely for alignment with POSIX."],["EventEnum","The contents of an `event`."],["Eventtype","Type of a subscription to an event or its occurrence."],["Filetype","The type of a file descriptor or file."],["OptionTag","__wasi_option_t"],["Preopentype","Identifiers for preopened capabilities."],["Signal",""],["Snapshot0Clockid","Identifiers for clocks, snapshot0 version."],["Snapshot0SubscriptionEnum","The contents of a `subscription`, snapshot0 version."],["Snapshot0Whence",""],["SockProto",""],["Sockoption",""],["Sockstatus",""],["Socktype",""],["StdioMode",""],["Streamsecurity",""],["SubscriptionEnum","The contents of a `subscription`."],["Timeout",""],["Whence",""]],"struct":[["AddrUnspec",""],["AddrUnspecPort",""],["BusEventClose",""],["BusEventExit",""],["BusEventFault",""],["BusHandles",""],["CidrUnspec",""],["Dirent","A directory entry."],["Event","An event that occurred."],["EventFdReadwrite","The contents of an `event` for the `eventtype::fd_read` and `eventtype::fd_write` variants"],["Eventrwflags","The state of the file descriptor subscribed to with `eventtype::fd_read` or `eventtype::fd_write`."],["Fdflags","File descriptor flags."],["Fdstat","File descriptor attributes."],["Filestat",""],["Fstflags","Which file time attributes to adjust. TODO: wit appears to not have support for flags repr (@witx repr u16)"],["HttpHandles",""],["HttpStatus",""],["Lookup","Flags determining the method of how paths are resolved. TODO: wit appears to not have support for flags repr (@witx repr u32)"],["Oflags","Open flags used by `path_open`. TODO: wit appears to not have support for flags repr (@witx repr u16)"],["OptionBid",""],["OptionCid",""],["OptionFd",""],["OptionTimestamp",""],["PipeHandles",""],["Prestat",""],["PrestatU",""],["PrestatUDir",""],["Rights","File descriptor rights, determining which actions may be performed."],["Snapshot0Dirent","A directory entry, snapshot0 version."],["Snapshot0Event","An event that occurred."],["Snapshot0Filestat",""],["Snapshot0Subscription",""],["Snapshot0SubscriptionClock","The contents of a `subscription` when type is `eventtype::clock`."],["Subclockflags","Flags determining how to interpret the timestamp provided in `subscription-clock::timeout`."],["Subscription",""],["SubscriptionClock","The contents of a `subscription` when type is `eventtype::clock`."],["SubscriptionFsReadwrite","The contents of a `subscription` when the variant is `eventtype::fd_read` or `eventtype::fd_write`."],["Tty",""]],"type":[["Bid",""],["Cid",""],["Count",""],["Device","Identifier for a device containing a file system. Can be used in combination with `inode` to uniquely identify a file or directory in the filesystem."],["Dircookie","A reference to the offset of a directory entry."],["Dirnamlen","The type for the `dirent::d-namlen` field of `dirent` struct."],["EventFdFlags",""],["ExitCode",""],["Fd","A file descriptor handle."],["FileDelta",""],["Filesize","Non-negative file size or length of a region within a file."],["Inode","File serial number that is unique within its file system."],["Linkcount",""],["LookupFlags",""],["Pid",""],["RiFlags",""],["RoFlags",""],["SdFlags",""],["SiFlags",""],["Size","Type names used by low-level WASI interfaces. An array size."],["Snapshot0Linkcount",""],["Tid",""],["Timestamp","Timestamp in nanoseconds."],["Userdata","User-provided value that may be attached to objects that is retained when extracted from the implementation."]]};