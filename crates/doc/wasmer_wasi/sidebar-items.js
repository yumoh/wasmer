initSidebarItems({"constant":[["ALL_RIGHTS","all the rights enabled"],["VIRTUAL_ROOT_FD","the fd value of the virtual root"]],"enum":[["FsError","Error type for external users"],["WasiError","This is returned in `RuntimeError`. Use `downcast` or `downcast_ref` to retrieve the `ExitCode`."],["WasiFsError","Error type for external users"],["WasiStateCreationError","Error type returned when bad data is given to [`WasiStateBuilder`]."],["WasiVersion","The version of WASI. This is determined by the imports namespace string."]],"fn":[["generate_import_object_from_env","Create an [`ImportObject`] with an existing [`WasiEnv`]. `WasiEnv` needs a [`WasiState`], that can be constructed from a `WasiStateBuilder`."],["generate_import_object_snapshot0","Combines a state generating function with the import list for legacy WASI"],["generate_import_object_snapshot1","Combines a state generating function with the import list for snapshot 1"],["get_wasi_version","Detect the version of WASI being used based on the import namespaces."],["get_wasi_versions","Like [`get_wasi_version`] but detects multiple WASI versions in a single module. Thus `strict` behaves differently in this function as multiple versions are always supported. `strict` indicates whether non-WASI imports should trigger a failure or be ignored."],["is_wasi_module","Check if a provided module is compiled for some version of WASI. Use [`get_wasi_version`] to find out which version of WASI the module is."]],"mod":[["macros","Macros to simplify some common WASI-specific tasks."],["ptr","This is a wrapper around the `WasmPtr` abstraction that returns __WASI_EFAULT if memory access failed"],["state","WARNING: the API exposed here is unstable and very experimental.  Certain things are not ready yet and may be broken in patch releases.  If youâ€™re using this and have any specific needs, please let us know here or by filing an issue."],["syscalls",""],["types",""],["utils",""]],"struct":[["Fd",""],["Pipe","For piping stdio. Stores all output / input in a byte-vector."],["Stderr","A wrapper type around Stderr that implements `VirtualFile` and `Serialize` + `Deserialize`."],["Stdin","A wrapper type around Stdin that implements `VirtualFile` and `Serialize` + `Deserialize`."],["Stdout","A wrapper type around Stdout that implements `VirtualFile` and `Serialize` + `Deserialize`."],["WasiEnv","The environment provided to the WASI imports."],["WasiFs","Warning, modifying these fields directly may cause invariants to break and should be considered unsafe.  These fields may be made private in a future release"],["WasiState","Top level data type containing all* the state with which WASI can interact."],["WasiStateBuilder","Convenient builder API for configuring WASI via [`WasiState`]."]],"trait":[["VirtualFile","This trait relies on your file closing when it goes out of scope via `Drop`"],["WasiFile","This trait relies on your file closing when it goes out of scope via `Drop`"]]});