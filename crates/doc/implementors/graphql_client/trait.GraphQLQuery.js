(function() {var implementors = {};
implementors["wasmer_registry"] = [{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/config/struct.TestIfRegistryPresent.html\" title=\"struct wasmer_registry::config::TestIfRegistryPresent\">TestIfRegistryPresent</a>","synthetic":false,"types":["wasmer_registry::config::TestIfRegistryPresent"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/graphql/struct.GetPackageVersionQuery.html\" title=\"struct wasmer_registry::graphql::GetPackageVersionQuery\">GetPackageVersionQuery</a>","synthetic":false,"types":["wasmer_registry::graphql::GetPackageVersionQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/graphql/struct.GetPackageByCommandQuery.html\" title=\"struct wasmer_registry::graphql::GetPackageByCommandQuery\">GetPackageByCommandQuery</a>","synthetic":false,"types":["wasmer_registry::graphql::GetPackageByCommandQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/graphql/struct.TestIfRegistryPresent.html\" title=\"struct wasmer_registry::graphql::TestIfRegistryPresent\">TestIfRegistryPresent</a>","synthetic":false,"types":["wasmer_registry::graphql::TestIfRegistryPresent"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/graphql/struct.GetBindingsQuery.html\" title=\"struct wasmer_registry::graphql::GetBindingsQuery\">GetBindingsQuery</a>","synthetic":false,"types":["wasmer_registry::graphql::GetBindingsQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/graphql/struct.PublishPackageMutationChunked.html\" title=\"struct wasmer_registry::graphql::PublishPackageMutationChunked\">PublishPackageMutationChunked</a>","synthetic":false,"types":["wasmer_registry::graphql::PublishPackageMutationChunked"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/graphql/struct.GetSignedUrl.html\" title=\"struct wasmer_registry::graphql::GetSignedUrl\">GetSignedUrl</a>","synthetic":false,"types":["wasmer_registry::graphql::GetSignedUrl"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/interface/struct.GetInterfaceVersionQuery.html\" title=\"struct wasmer_registry::interface::GetInterfaceVersionQuery\">GetInterfaceVersionQuery</a>","synthetic":false,"types":["wasmer_registry::interface::GetInterfaceVersionQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/queries/struct.GetPackageVersionQuery.html\" title=\"struct wasmer_registry::queries::GetPackageVersionQuery\">GetPackageVersionQuery</a>","synthetic":false,"types":["wasmer_registry::queries::GetPackageVersionQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/queries/struct.WhoAmIQuery.html\" title=\"struct wasmer_registry::queries::WhoAmIQuery\">WhoAmIQuery</a>","synthetic":false,"types":["wasmer_registry::queries::WhoAmIQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/queries/struct.GetPackageByCommandQuery.html\" title=\"struct wasmer_registry::queries::GetPackageByCommandQuery\">GetPackageByCommandQuery</a>","synthetic":false,"types":["wasmer_registry::queries::GetPackageByCommandQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/queries/struct.TestIfRegistryPresent.html\" title=\"struct wasmer_registry::queries::TestIfRegistryPresent\">TestIfRegistryPresent</a>","synthetic":false,"types":["wasmer_registry::queries::TestIfRegistryPresent"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/queries/struct.GetBindingsQuery.html\" title=\"struct wasmer_registry::queries::GetBindingsQuery\">GetBindingsQuery</a>","synthetic":false,"types":["wasmer_registry::queries::GetBindingsQuery"]},{"text":"impl GraphQLQuery for <a class=\"struct\" href=\"wasmer_registry/utils/struct.WhoAmIQuery.html\" title=\"struct wasmer_registry::utils::WhoAmIQuery\">WhoAmIQuery</a>","synthetic":false,"types":["wasmer_registry::utils::WhoAmIQuery"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()