initSidebarItems({"enum":[["VMFunctionKind","A function kind is a calling convention into and out of wasm code."]],"struct":[["VMBuiltinFunctionsArray","An array that stores addresses of builtin functions. We translate code to use indirect calls. This way, we don’t have to patch the code."],["VMCallerCheckedAnyfunc","The VM caller-checked “anyfunc” record, for caller-side signature checking. It consists of the actual function pointer and a signature id to be checked by the caller."],["VMContext","The VM “context”, which is pointed to by the `vmctx` arg in the compiler. This has information about globals, memories, tables, and other runtime state associated with the current instance."],["VMDynamicFunctionContext","The `VMDynamicFunctionContext` is the context that dynamic functions will receive when called (rather than `vmctx`). A dynamic function is a function for which we don’t know the signature until runtime."],["VMFunctionBody","A placeholder byte-sized type which is just used to provide some amount of type safety when dealing with pointers to JIT-compiled function bodies. Note that it’s deliberately not Copy, as we shouldn’t be carelessly copying function body bytes around."],["VMFunctionImport","An imported function."],["VMGlobalDefinition","The storage for a WebAssembly global defined within the instance."],["VMGlobalImport","The fields compiled code needs to access to utilize a WebAssembly global variable imported from another instance."],["VMMemoryDefinition","The fields compiled code needs to access to utilize a WebAssembly linear memory defined within the instance, namely the start address and the size in bytes."],["VMMemoryImport","The fields compiled code needs to access to utilize a WebAssembly linear memory imported from another instance."],["VMSharedSignatureIndex","An index into the shared signature registry, usable for checking signatures at indirect calls."],["VMTableDefinition","The fields compiled code needs to access to utilize a WebAssembly table defined within the instance."],["VMTableImport","The fields compiled code needs to access to utilize a WebAssembly table imported from another instance."]],"type":[["VMTrampoline",""]],"union":[["VMFunctionEnvironment","Union representing the first parameter passed when calling a function."],["VMGlobalDefinitionStorage","A typesafe wrapper around the storage for a global variables."]]});